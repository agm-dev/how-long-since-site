{"version":3,"sources":["webpack:///./src/pages/add.js","webpack:///./src/styles/colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Menu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/AddItemForm.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_AddItemForm__WEBPACK_IMPORTED_MODULE_3__","a","createElement","title","require","green","deepOrange","module","exports","lightPrimary","lightSecondary","lightBackground","lightFont","darkPrimary","darkSecondary","darkBackground","darkFont","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","components_Menu","_React$useState","useState","anchorEl","setAnchorEl","react_default","IconButton","edge","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","esm_Menu","style","color","Menu","id","keepMounted","open","Boolean","onClose","gatsby_browser_entry","to","MenuItem","Header","siteTitle","AppBar","position","marginLeft","marginTop","backgroundColor","Toolbar","minHeight","headerHeight","Typography","variant","Layout","_856328897","header","Grid","container","spacing","className","item","xs","formatOptions","entries","map","index","key","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","value","tag","_ref2","itemId","context","useContext","DataContext","addItem","items","updateItem","now","Date","find","i","Number","_useState","text","setText","_useState2","time","date","setDate","_useState3","setTime","_useState4","format","timeFormats","days","setFormat","_useState5","goal","setGoal","updateFormat","e","target","noValidate","autoComplete","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","maxWidth","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","paragraph","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","required","label","onChange","margin","fullWidth","_material_ui_core__WEBPACK_IMPORTED_MODULE_17__","htmlFor","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_22__","utils","DateFnsUtils","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_23__","emptyLabel","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_24__","ampm","_material_ui_core__WEBPACK_IMPORTED_MODULE_18__","inputProps","type","InputLabelProps","shrink","disabled","_material_ui_core__WEBPACK_IMPORTED_MODULE_19__","size","preventDefault","combined","getCombinedDatetime","getTime","itemData","navigate","_material_ui_icons__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"component---src-pages-add-js-f042686849e393bc92d7.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport AddItemForm from '../components/AddItemForm'\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <SEO title=\"Add\" />\r\n    <AddItemForm />\r\n  </Layout>\r\n)\r\n","const { green, deepOrange } = require('@material-ui/core/colors')\n\nmodule.exports = {\n  lightPrimary: green[500],\n  lightSecondary: green[200],\n  lightBackground: green[50],\n  lightFont: '#222',\n  darkPrimary: deepOrange[900],\n  darkSecondary: deepOrange[600],\n  darkBackground: deepOrange[400], // might be 500\n  darkFont: '#fff', // might be #fff\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `viewport`,\r\n          content: `minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no`,\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport {\r\n  Menu as MenuIcon,\r\n} from '@material-ui/icons'\r\nimport {\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nexport default () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        edge=\"start\"\r\n        aria-label=\"home\"\r\n        aria-controls=\"menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MenuIcon style={{ color: darkFont }} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Link to=\"/\">\r\n          <MenuItem>Events</MenuItem>\r\n        </Link>\r\n        <Link to=\"/add\">\r\n          <MenuItem>Add</MenuItem>\r\n        </Link>\r\n        <Link to=\"/data\">\r\n          <MenuItem>Import / Export</MenuItem>\r\n        </Link>\r\n      </Menu>\r\n    </>\r\n  )\r\n}","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nimport Menu from './Menu'\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const headerHeight = 70\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          position: 'fixed',\r\n          marginLeft: '-8px', // to remove margin 8px on body\r\n          marginTop: '-8px', // to remove margin 8px on body\r\n          backgroundColor: lightPrimary,\r\n          color: darkFont,\r\n        }}\r\n      >\r\n        <Toolbar style={{\r\n          minHeight: `${headerHeight}px`,\r\n        }}>\r\n          <Menu />\r\n          <Link to=\"/\" >\r\n            <Typography variant=\"h6\">{siteTitle}</Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div style={{\r\n          minHeight: `${headerHeight}px`,\r\n      }} />\r\n    </>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport Header from \"./header\"\r\nimport '../styles/index.scss'\r\nimport { lightBackground, lightFont } from '../styles/colors'\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        className=\"container\"\r\n        style={{\r\n          backgroundColor: lightBackground,\r\n          color: lightFont,\r\n        }}\r\n      >\r\n        {/* Main content section */}\r\n        <Grid item xs={12}>\r\n          {children}\r\n        </Grid>\r\n        {/* Footer section */}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState, useContext } from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { DataContext } from '../context/DataContext'\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core'\r\nimport {\r\n  Create as CreateIcon\r\n} from '@material-ui/icons'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  MuiPickersUtilsProvider\r\n} from '@material-ui/pickers'\r\nimport { getCombinedDatetime, timeFormats } from '../utils/time.utils'\r\n\r\nconst formatOptions = data => Object\r\n  .entries(data)\r\n  .map(([key, item], index) => <MenuItem key={index} value={item.tag}>{key}</MenuItem>)\r\n\r\nexport default ({ itemId }) => {\r\n  const context = useContext(DataContext)\r\n  const { addItem, items, updateItem } = context\r\n  const now = new Date()\r\n  const item = itemId ? items.find(i => Number(i.id) === Number(itemId)) : null\r\n\r\n  const [text, setText] = useState(item ? item.text : '')\r\n  const [date, setDate] = useState(item ? new Date(item.time) : now)\r\n  const [time, setTime] = useState(item ? new Date(item.time) : now)\r\n  const [format, setFormat] = useState(item ? item.format : timeFormats.days.tag)\r\n  const [goal, setGoal] = useState(item ? item.goal : null)\r\n\r\n  const updateText = e => setText(e.target.value)\r\n  const updateDate = date => setDate(date)\r\n  const updateTime = date => setTime(date)\r\n  const updateFormat = e => setFormat(e.target.value)\r\n  const updateGoal = e => setGoal(Number(e.target.value) >= 0 ? Number(e.target.value) : 0)\r\n  const add = e => {\r\n    e.preventDefault()\r\n    const combined = getCombinedDatetime(date, time).getTime()\r\n    const itemData = {\r\n      text,\r\n      time: combined,\r\n      format,\r\n      goal: goal > 0 ? goal : null,\r\n    }\r\n    if (itemId && item && item.id) {\r\n      updateItem(Object.assign(item, itemData))\r\n    } else {\r\n      addItem(itemData)\r\n    }\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\">\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Box className=\"main-content\">\r\n              <Typography variant=\"body1\" paragraph>\r\n                Introduce the text for describing your event. You can use the # symbol to mark the space where the time and format will be displayed.\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <em>Example: # from the last beer.</em>\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              required\r\n              id=\"text\"\r\n              name=\"text\"\r\n              label=\"Event\"\r\n              value={text}\r\n              onChange={updateText}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"date-helper\">Date</InputLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <DatePicker\r\n                value={date}\r\n                onChange={updateDate}\r\n                emptyLabel=\"date\"\r\n                id=\"date-helper\"\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"time-helper\">Time</InputLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                value={time}\r\n                onChange={updateTime}\r\n                ampm={false}\r\n                id=\"time-helper\"\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"format-helper\">Format</InputLabel>\r\n            <Select\r\n              value={format}\r\n              onChange={updateFormat}\r\n              inputProps={{ name: 'format', id: 'format-helper' }}\r\n            >\r\n              {formatOptions(timeFormats)}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box style={{ marginTop: '3vh' }}>\r\n              <Typography variant=\"body1\" paragraph>\r\n                You can set a goal. The task will be marked as completed as soon as you reach the time goal.\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"goal\">Goal</InputLabel>\r\n            <TextField\r\n              type=\"number\"\r\n              id=\"goal\"\r\n              name=\"goal\"\r\n              value={goal || 0}\r\n              onChange={updateGoal}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              margin=\"normal\"\r\n              style={{ marginTop: 0 }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"goal-format-helper\">Format</InputLabel>\r\n            <Select\r\n              value={format}\r\n              onChange={updateFormat}\r\n              inputProps={{ name: 'goal-format', id: 'goal-format-helper' }}\r\n              disabled\r\n            >\r\n              {formatOptions(timeFormats)}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box className=\"buttons-container\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                onClick={add}\r\n                style={{\r\n                  backgroundColor: lightPrimary,\r\n                  color: darkFont,\r\n                }}\r\n              >\r\n                <CreateIcon className=\"icon\" />\r\n                Add\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </form>\r\n  )\r\n}\r\n"],"sourceRoot":""}