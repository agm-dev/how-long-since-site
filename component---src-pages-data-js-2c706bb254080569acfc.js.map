{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/esm/FileCopy.js","webpack:///./node_modules/@material-ui/icons/esm/ImportExport.js","webpack:///./src/components/DataForm.js","webpack:///./src/pages/data.js","webpack:///./src/styles/colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Menu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["FileCopy","Object","createSvgIcon","react_default","a","createElement","d","ImportExport","DataForm","context","useContext","DataContext","items","importData","exportString","stringified","JSON","stringify","encoded","encodeURI","btoa","exportData","_useState","useState","code","setCode","_useState2","anchorEl","setAnchorEl","popoverOpen","Boolean","popoverId","undefined","buttonColors","backgroundColor","lightPrimary","color","darkFont","Container","maxWidth","Grid","container","spacing","item","xs","Box","className","Typography","variant","paragraph","InputLabel","htmlFor","TextField","required","id","name","multiline","rowsMax","value","onChange","e","target","margin","fullWidth","Button","aria-describedby","size","onClick","preventDefault","currentTarget","navigator","permissions","query","then","result","state","clipboard","writeText","console","log","warn","style","Popover","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","padding","message","navigate","disabled","assign","marginLeft","__webpack_exports__","layout","seo","title","require","green","deepOrange","module","exports","lightSecondary","lightBackground","lightFont","darkPrimary","darkSecondary","darkBackground","__webpack_require__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","render","finalData","Fragment","props","children","Consumer","m","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","components_Menu","_React$useState","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","esm_Menu","Menu","keepMounted","gatsby_browser_entry","to","MenuItem","Header","siteTitle","AppBar","position","marginTop","Toolbar","minHeight","headerHeight","Layout","_856328897","header"],"mappings":"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","file":"component---src-pages-data-js-2c706bb254080569acfc.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z\"\n}), 'ImportExport');","import React, { useState, useContext } from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport { DataContext } from '../context/DataContext'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Container,\r\n  InputLabel,\r\n  TextField,\r\n  Popover,\r\n} from '@material-ui/core'\r\nimport {\r\n  FileCopy as FileCopyIcon,\r\n  ImportExport as ImportExportIcon,\r\n} from '@material-ui/icons'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nconst exportData = items => {\r\n  const stringified = JSON.stringify(items)\r\n  const encoded = encodeURI(stringified)\r\n  return typeof btoa !== 'undefined' ? btoa(encoded) : encoded\r\n}\r\n\r\nexport default () => {\r\n  const context = useContext(DataContext)\r\n  const {\r\n    items,\r\n    importData,\r\n  } = context\r\n\r\n  const exportString = exportData(items)\r\n  const [code, setCode] = useState(exportString)\r\n  const [anchorEl, setAnchorEl] = useState(null) // popover\r\n  const updateCode = e => setCode(e.target.value)\r\n  const copyHandler = e => {\r\n    e.preventDefault()\r\n    setAnchorEl(e.currentTarget) // this is not really true.. it could fail\r\n    navigator.permissions.query({ name: 'clipboard-write' })\r\n      .then(result => {\r\n        if (result.state === 'granted' || result.state === 'prompt') {\r\n          navigator.clipboard.writeText(code)\r\n            .then(\r\n              () => console.log('code copied to clipboard'),\r\n              () => console.warn('failed to copy code into clipboard')\r\n            )\r\n        }\r\n      })\r\n  }\r\n  const closePopoverHandler = () => setAnchorEl(null)\r\n  const importHandler = e => {\r\n    e.preventDefault()\r\n\r\n    if (code === exportString) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      importData(code)\r\n    } catch (e) {\r\n      console.log('error on importing data', e.message)\r\n    }\r\n\r\n    console.log('data has been imported')\r\n    navigate('/')\r\n  }\r\n\r\n  const popoverOpen = Boolean(anchorEl)\r\n  const popoverId = popoverOpen ? 'simple-popover' : undefined\r\n\r\n  const buttonColors = {\r\n    backgroundColor: lightPrimary,\r\n    color: darkFont,\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Box className=\"main-content\">\r\n            <Typography variant=\"body1\" paragraph>\r\n              The code below contains your data, and you can copy and save it to import the data in other device.\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n              You can also remove the code, paste a different code instead, and import the data.\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <InputLabel htmlFor=\"data\">Code</InputLabel>\r\n          <TextField\r\n            required\r\n            id=\"data\"\r\n            name=\"data\"\r\n            multiline\r\n            rowsMax=\"13\"\r\n            value={code}\r\n            onChange={updateCode}\r\n            margin=\"normal\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box className=\"buttons-container\">\r\n            <Button\r\n              aria-describedby={popoverId}\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              onClick={copyHandler}\r\n              style={buttonColors}\r\n            >\r\n              <FileCopyIcon className=\"icon\" />\r\n              Copy\r\n            </Button>\r\n            <Popover\r\n              id={popoverId}\r\n              open={popoverOpen}\r\n              anchorEl={anchorEl}\r\n              onClose={closePopoverHandler}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n              }}\r\n            >\r\n              <Typography variant=\"body1\" style={{ padding: '5px' }}>\r\n                The code has been copied to your clipboard.\r\n              </Typography>\r\n            </Popover>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              onClick={importHandler}\r\n              disabled={code === exportString}\r\n              style={Object.assign(\r\n                { marginLeft: '25px' },\r\n                code === exportString ? {} : buttonColors,\r\n              )}\r\n            >\r\n              <ImportExportIcon className=\"icon\" />\r\n              Import\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport DataForm from '../components/DataForm'\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <SEO title=\"Add\" />\r\n    <DataForm />\r\n  </Layout>\r\n)\r\n","const { green, deepOrange } = require('@material-ui/core/colors')\n\nmodule.exports = {\n  lightPrimary: green[500],\n  lightSecondary: green[200],\n  lightBackground: green[50],\n  lightFont: '#222',\n  darkPrimary: deepOrange[900],\n  darkSecondary: deepOrange[600],\n  darkBackground: deepOrange[400], // might be 500\n  darkFont: '#fff', // might be #fff\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `viewport`,\r\n          content: `minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no`,\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport {\r\n  Menu as MenuIcon,\r\n} from '@material-ui/icons'\r\nimport {\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nexport default () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        edge=\"start\"\r\n        aria-label=\"home\"\r\n        aria-controls=\"menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MenuIcon style={{ color: darkFont }} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Link to=\"/\">\r\n          <MenuItem>Events</MenuItem>\r\n        </Link>\r\n        <Link to=\"/add\">\r\n          <MenuItem>Add</MenuItem>\r\n        </Link>\r\n        <Link to=\"/data\">\r\n          <MenuItem>Import / Export</MenuItem>\r\n        </Link>\r\n      </Menu>\r\n    </>\r\n  )\r\n}","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nimport Menu from './Menu'\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const headerHeight = 70\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          position: 'fixed',\r\n          marginLeft: '-8px', // to remove margin 8px on body\r\n          marginTop: '-8px', // to remove margin 8px on body\r\n          backgroundColor: lightPrimary,\r\n          color: darkFont,\r\n        }}\r\n      >\r\n        <Toolbar style={{\r\n          minHeight: `${headerHeight}px`,\r\n        }}>\r\n          <Menu />\r\n          <Link to=\"/\" >\r\n            <Typography variant=\"h6\">{siteTitle}</Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div style={{\r\n          minHeight: `${headerHeight}px`,\r\n      }} />\r\n    </>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport Header from \"./header\"\r\nimport '../styles/index.scss'\r\nimport { lightBackground, lightFont } from '../styles/colors'\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        className=\"container\"\r\n        style={{\r\n          backgroundColor: lightBackground,\r\n          color: lightFont,\r\n        }}\r\n      >\r\n        {/* Main content section */}\r\n        <Grid item xs={12}>\r\n          {children}\r\n        </Grid>\r\n        {/* Footer section */}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}