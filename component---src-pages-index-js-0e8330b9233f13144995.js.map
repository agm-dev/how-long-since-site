{"version":3,"sources":["webpack:///./src/components/ItemListItem.js","webpack:///./src/components/ItemsList.js","webpack:///./src/components/AddItemButton.js","webpack:///./src/pages/index.js","webpack:///./src/styles/colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Menu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["ItemListItem","_ref","item","_useContext","useContext","DataContext","removeItem","resetItem","formatKey","Object","entries","timeFormats","find","_ref2","tag","format","shift","delay","value","getDisplayText","text","replace","howLong","_useState","useState","displayText","setDisplayText","useInterval","goalText","goal","recordText","record","howLongRecord","secondaryText","length","react_default","a","createElement","Card","key","id","style","marginBottom","paddingTop","paddingBottom","backgroundColor","lightSecondary","color","lightFont","ListItem","ListItemAvatar","Avatar","aria-label","lightPrimary","onClick","Refresh","ListItemText","primary","className","isCompleted","secondary","ListItemSecondaryAction","IconButton","edge","Delete","ItemsList","_items$reduce","items","reduce","completed","uncompleted","concat","_toConsumableArray","sortedItems","Fragment","List","map","AddItemButton","to","gatsby_browser_entry","position","bottom","right","Fab","variant","darkFont","Add_default","IndexPage","layout","seo","title","Box","Typography","require","green","deepOrange","module","exports","lightBackground","darkPrimary","darkSecondary","darkBackground","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","defaultProps","components_Menu","_React$useState","anchorEl","setAnchorEl","aria-controls","aria-haspopup","event","currentTarget","esm_Menu","Menu","keepMounted","open","Boolean","onClose","MenuItem","Header","siteTitle","AppBar","marginLeft","marginTop","Toolbar","minHeight","headerHeight","Layout","children","_856328897","header","Grid","container","spacing","xs"],"mappings":"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","file":"component---src-pages-index-js-0e8330b9233f13144995.js","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Avatar,\r\n  IconButton,\r\n  Card,\r\n} from '@material-ui/core'\r\nimport {\r\n  Delete as DeleteIcon,\r\n  Refresh as RefreshIcon,\r\n} from '@material-ui/icons'\r\nimport {\r\n  lightPrimary,\r\n  lightSecondary,\r\n  lightFont,\r\n} from '../styles/colors'\r\nimport { DataContext } from '../context/DataContext'\r\nimport { timeFormats, useInterval } from '../utils/time.utils'\r\n\r\nexport default ({ item }) => {\r\n  const { removeItem, resetItem } = useContext(DataContext)\r\n  const remove = () => removeItem(item)\r\n  const reset = () => resetItem(item)\r\n\r\n  const formatKey = Object\r\n    .entries(timeFormats)\r\n    .find(([key, data]) => data.tag === item.format)\r\n    .shift()\r\n  const delay = timeFormats[formatKey].value\r\n\r\n  const getDisplayText = () => item.text.replace('#', `${item.howLong} ${formatKey}`)\r\n\r\n  const [displayText, setDisplayText] = useState(getDisplayText())\r\n  useInterval(() => {\r\n    setDisplayText(getDisplayText())\r\n  }, delay)\r\n\r\n  const goalText = item.goal ? `Goal: ${item.goal} ${formatKey}` : ''\r\n  const recordText = item.record ? `Record: ${item.howLongRecord} ${formatKey}` : ''\r\n  const secondaryText = `${goalText}${goalText.length ? '. ' : ''}${recordText}`\r\n\r\n  return (\r\n    <Card key={item.id} style={{\r\n      marginBottom: '2vh',\r\n      paddingTop: '1vh',\r\n      paddingBottom: '1vh',\r\n      backgroundColor: lightSecondary,\r\n      color: lightFont,\r\n    }}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar\r\n            aria-label={displayText}\r\n            style={{ backgroundColor: lightPrimary }}\r\n            onClick={reset}\r\n          >\r\n            <RefreshIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n\r\n        <ListItemText\r\n          primary={\r\n            <span className={item.isCompleted ? 'completed' : ''}>{displayText}</span>\r\n          }\r\n          secondary={secondaryText}\r\n        />\r\n\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={remove}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { List } from '@material-ui/core'\r\nimport ItemListItem from './ItemListItem'\r\n\r\nexport default ({ items }) => {\r\n\r\n  const [completed, uncompleted] = items.reduce(([completed, uncompleted], item) => {\r\n    if (item.isCompleted) {\r\n      return [[item, ...completed], uncompleted]\r\n    }\r\n    return [completed, [...uncompleted, item]]\r\n  }, [[], []])\r\n\r\n  const sortedItems = [...uncompleted, ...completed]\r\n\r\n  return (\r\n    <>\r\n    <List>\r\n      {sortedItems.map(item => <ItemListItem key={item.id} item={item} />)}\r\n    </List>\r\n    <div className=\"breakline\" />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Fab } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nexport default ({ to }) => (\r\n  <Link\r\n    to={to}\r\n    style={{\r\n      position: 'fixed',\r\n      bottom: '2vh',\r\n      right: '2vh',\r\n    }}\r\n  >\r\n    <Fab\r\n      aria-label=\"add\"\r\n      variant=\"round\"\r\n      style={{\r\n        backgroundColor: lightPrimary,\r\n        color: darkFont,\r\n      }}\r\n    >\r\n      <AddIcon />\r\n    </Fab>\r\n  </Link>\r\n)\r\n","import React, { useContext } from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport ItemsList from '../components/ItemsList'\r\nimport AddItemButton from '../components/AddItemButton'\r\nimport { DataContext } from '../context/DataContext'\r\nimport { Typography, Box } from '@material-ui/core'\r\n\r\nconst IndexPage = () => {\r\n  const context = useContext(DataContext)\r\n  const { items } = context\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <Box className=\"main-content\">\r\n        {\r\n          items.length ?\r\n          (\r\n            <>\r\n              <Typography variant=\"subtitle1\">\r\n                You are tracking {items.length} events:\r\n              </Typography>\r\n              <ItemsList items={items} />\r\n            </>\r\n          ) :\r\n          <Typography>Try to add some events!</Typography>\r\n        }\r\n      </Box>\r\n      <AddItemButton to=\"/add\" />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n","const { green, deepOrange } = require('@material-ui/core/colors')\n\nmodule.exports = {\n  lightPrimary: green[500],\n  lightSecondary: green[200],\n  lightBackground: green[50],\n  lightFont: '#222',\n  darkPrimary: deepOrange[900],\n  darkSecondary: deepOrange[600],\n  darkBackground: deepOrange[400], // might be 500\n  darkFont: '#fff', // might be #fff\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `viewport`,\r\n          content: `minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no`,\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport {\r\n  Menu as MenuIcon,\r\n} from '@material-ui/icons'\r\nimport {\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nexport default () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        edge=\"start\"\r\n        aria-label=\"home\"\r\n        aria-controls=\"menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MenuIcon style={{ color: darkFont }} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Link to=\"/\">\r\n          <MenuItem>Events</MenuItem>\r\n        </Link>\r\n        <Link to=\"/add\">\r\n          <MenuItem>Add</MenuItem>\r\n        </Link>\r\n      </Menu>\r\n    </>\r\n  )\r\n}","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nimport Menu from './Menu'\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const headerHeight = 70\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          position: 'fixed',\r\n          marginLeft: '-8px', // to remove margin 8px on body\r\n          marginTop: '-8px', // to remove margin 8px on body\r\n          backgroundColor: lightPrimary,\r\n          color: darkFont,\r\n        }}\r\n      >\r\n        <Toolbar style={{\r\n          minHeight: `${headerHeight}px`,\r\n        }}>\r\n          <Menu />\r\n          <Link to=\"/\" >\r\n            <Typography variant=\"h6\">{siteTitle}</Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div style={{\r\n          minHeight: `${headerHeight}px`,\r\n      }} />\r\n    </>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport Header from \"./header\"\r\nimport '../styles/index.scss'\r\nimport { lightBackground, lightFont } from '../styles/colors'\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        className=\"container\"\r\n        style={{\r\n          backgroundColor: lightBackground,\r\n          color: lightFont,\r\n        }}\r\n      >\r\n        {/* Main content section */}\r\n        <Grid item xs={12}>\r\n          {children}\r\n        </Grid>\r\n        {/* Footer section */}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}