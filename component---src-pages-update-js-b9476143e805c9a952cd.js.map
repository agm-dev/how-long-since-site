{"version":3,"sources":["webpack:///./src/pages/update.js","webpack:///./src/styles/colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Menu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/AddItemForm.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_reach_router__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_AddItemForm__WEBPACK_IMPORTED_MODULE_4__","a","createElement","title","path","require","green","deepOrange","module","exports","lightPrimary","lightSecondary","lightBackground","lightFont","darkPrimary","darkSecondary","darkBackground","darkFont","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","components_Menu","_React$useState","useState","anchorEl","setAnchorEl","react_default","Fragment","IconButton","edge","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","esm_Menu","style","color","Menu","id","keepMounted","open","Boolean","onClose","gatsby_browser_entry","to","MenuItem","Header","siteTitle","AppBar","position","marginLeft","marginTop","backgroundColor","Toolbar","minHeight","headerHeight","Typography","variant","Layout","children","_856328897","header","Grid","container","spacing","className","item","xs","formatOptions","entries","map","index","key","react__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","value","tag","_ref2","itemId","context","useContext","DataContext","addItem","items","updateItem","now","Date","find","i","Number","_useState","text","setText","_useState2","time","date","setDate","_useState3","setTime","_useState4","format","timeFormats","days","setFormat","_useState5","goal","setGoal","updateFormat","e","target","noValidate","autoComplete","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","maxWidth","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core__WEBPACK_IMPORTED_MODULE_15__","paragraph","_material_ui_core__WEBPACK_IMPORTED_MODULE_16__","required","label","onChange","margin","fullWidth","_material_ui_core__WEBPACK_IMPORTED_MODULE_17__","htmlFor","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_22__","utils","DateFnsUtils","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_23__","emptyLabel","_material_ui_pickers__WEBPACK_IMPORTED_MODULE_24__","ampm","_material_ui_core__WEBPACK_IMPORTED_MODULE_18__","inputProps","type","InputLabelProps","shrink","disabled","_material_ui_core__WEBPACK_IMPORTED_MODULE_19__","size","preventDefault","combined","getCombinedDatetime","getTime","itemData","navigate","_material_ui_icons__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"component---src-pages-update-js-b9476143e805c9a952cd.js","sourcesContent":["import React from \"react\"\nimport { Router } from '@reach/router'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport AddItemForm from '../components/AddItemForm'\n\nexport default () => (\n  <Layout>\n    <SEO title=\"Add\" />\n    <Router>\n      <AddItemForm path=\"/update/:itemId\" />\n    </Router>\n  </Layout>\n)\n","const { green, deepOrange } = require('@material-ui/core/colors')\n\nmodule.exports = {\n  lightPrimary: green[500],\n  lightSecondary: green[200],\n  lightBackground: green[50],\n  lightFont: '#222',\n  darkPrimary: deepOrange[900],\n  darkSecondary: deepOrange[600],\n  darkBackground: deepOrange[400], // might be 500\n  darkFont: '#fff', // might be #fff\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `viewport`,\r\n          content: `minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no`,\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport {\r\n  Menu as MenuIcon,\r\n} from '@material-ui/icons'\r\nimport {\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nexport default () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        edge=\"start\"\r\n        aria-label=\"home\"\r\n        aria-controls=\"menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MenuIcon style={{ color: darkFont }} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Link to=\"/\">\r\n          <MenuItem>Events</MenuItem>\r\n        </Link>\r\n        <Link to=\"/add\">\r\n          <MenuItem>Add</MenuItem>\r\n        </Link>\r\n        <Link to=\"/data\">\r\n          <MenuItem>Import / Export</MenuItem>\r\n        </Link>\r\n      </Menu>\r\n    </>\r\n  )\r\n}","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nimport Menu from './Menu'\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const headerHeight = 70\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          position: 'fixed',\r\n          marginLeft: '-8px', // to remove margin 8px on body\r\n          marginTop: '-8px', // to remove margin 8px on body\r\n          backgroundColor: lightPrimary,\r\n          color: darkFont,\r\n        }}\r\n      >\r\n        <Toolbar style={{\r\n          minHeight: `${headerHeight}px`,\r\n        }}>\r\n          <Menu />\r\n          <Link to=\"/\" >\r\n            <Typography variant=\"h6\">{siteTitle}</Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div style={{\r\n          minHeight: `${headerHeight}px`,\r\n      }} />\r\n    </>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport Header from \"./header\"\r\nimport '../styles/index.scss'\r\nimport { lightBackground, lightFont } from '../styles/colors'\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        className=\"container\"\r\n        style={{\r\n          backgroundColor: lightBackground,\r\n          color: lightFont,\r\n        }}\r\n      >\r\n        {/* Main content section */}\r\n        <Grid item xs={12}>\r\n          {children}\r\n        </Grid>\r\n        {/* Footer section */}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState, useContext } from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { DataContext } from '../context/DataContext'\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core'\r\nimport {\r\n  Create as CreateIcon\r\n} from '@material-ui/icons'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  MuiPickersUtilsProvider\r\n} from '@material-ui/pickers'\r\nimport { getCombinedDatetime, timeFormats } from '../utils/time.utils'\r\n\r\nconst formatOptions = data => Object\r\n  .entries(data)\r\n  .map(([key, item], index) => <MenuItem key={index} value={item.tag}>{key}</MenuItem>)\r\n\r\nexport default ({ itemId }) => {\r\n  const context = useContext(DataContext)\r\n  const { addItem, items, updateItem } = context\r\n  const now = new Date()\r\n  const item = itemId ? items.find(i => Number(i.id) === Number(itemId)) : null\r\n\r\n  const [text, setText] = useState(item ? item.text : '')\r\n  const [date, setDate] = useState(item ? new Date(item.time) : now)\r\n  const [time, setTime] = useState(item ? new Date(item.time) : now)\r\n  const [format, setFormat] = useState(item ? item.format : timeFormats.days.tag)\r\n  const [goal, setGoal] = useState(item ? item.goal : null)\r\n\r\n  const updateText = e => setText(e.target.value)\r\n  const updateDate = date => setDate(date)\r\n  const updateTime = date => setTime(date)\r\n  const updateFormat = e => setFormat(e.target.value)\r\n  const updateGoal = e => setGoal(Number(e.target.value) >= 0 ? Number(e.target.value) : 0)\r\n  const add = e => {\r\n    e.preventDefault()\r\n    const combined = getCombinedDatetime(date, time).getTime()\r\n    const itemData = {\r\n      text,\r\n      time: combined,\r\n      format,\r\n      goal: goal > 0 ? goal : null,\r\n    }\r\n    if (itemId && item && item.id) {\r\n      updateItem(Object.assign(item, itemData))\r\n    } else {\r\n      addItem(itemData)\r\n    }\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\">\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Box className=\"main-content\">\r\n              <Typography variant=\"body1\" paragraph>\r\n                Introduce the text for describing your event. You can use the # symbol to mark the space where the time and format will be displayed.\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <em>Example: # from the last beer.</em>\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              required\r\n              id=\"text\"\r\n              name=\"text\"\r\n              label=\"Event\"\r\n              value={text}\r\n              onChange={updateText}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"date-helper\">Date</InputLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <DatePicker\r\n                value={date}\r\n                onChange={updateDate}\r\n                emptyLabel=\"date\"\r\n                id=\"date-helper\"\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"time-helper\">Time</InputLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                value={time}\r\n                onChange={updateTime}\r\n                ampm={false}\r\n                id=\"time-helper\"\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"format-helper\">Format</InputLabel>\r\n            <Select\r\n              value={format}\r\n              onChange={updateFormat}\r\n              inputProps={{ name: 'format', id: 'format-helper' }}\r\n            >\r\n              {formatOptions(timeFormats)}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box style={{ marginTop: '3vh' }}>\r\n              <Typography variant=\"body1\" paragraph>\r\n                You can set a goal. The task will be marked as completed as soon as you reach the time goal.\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"goal\">Goal</InputLabel>\r\n            <TextField\r\n              type=\"number\"\r\n              id=\"goal\"\r\n              name=\"goal\"\r\n              value={goal || 0}\r\n              onChange={updateGoal}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              margin=\"normal\"\r\n              style={{ marginTop: 0 }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"goal-format-helper\">Format</InputLabel>\r\n            <Select\r\n              value={format}\r\n              onChange={updateFormat}\r\n              inputProps={{ name: 'goal-format', id: 'goal-format-helper' }}\r\n              disabled\r\n            >\r\n              {formatOptions(timeFormats)}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box className=\"buttons-container\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                onClick={add}\r\n                style={{\r\n                  backgroundColor: lightPrimary,\r\n                  color: darkFont,\r\n                }}\r\n              >\r\n                <CreateIcon className=\"icon\" />\r\n                Add\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </form>\r\n  )\r\n}\r\n"],"sourceRoot":""}