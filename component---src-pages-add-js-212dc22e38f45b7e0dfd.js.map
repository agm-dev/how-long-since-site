{"version":3,"sources":["webpack:///./src/components/AddItemForm.js","webpack:///./src/pages/add.js","webpack:///./src/styles/colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Menu.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["formatOptions","data","Object","entries","map","_ref","index","key","item","react_default","a","createElement","MenuItem","value","tag","AddItemForm","props","addItem","useContext","DataContext","now","Date","_useState","useState","text","setText","_useState2","date","setDate","_useState3","time","setTime","_useState4","timeFormats","days","format","setFormat","_useState5","goal","setGoal","updateFormat","e","target","noValidate","autoComplete","Container","maxWidth","Grid","container","spacing","xs","Box","className","Typography","variant","paragraph","TextField","required","id","name","label","onChange","margin","fullWidth","InputLabel","htmlFor","MuiPickersUtilsProvider","utils","DateFnsUtils","DatePicker","emptyLabel","TimePicker","ampm","Select","inputProps","style","marginTop","type","Number","InputLabelProps","shrink","disabled","Button","size","onClick","preventDefault","combined","getCombinedDatetime","getTime","navigate","backgroundColor","lightPrimary","color","darkFont","Create","__webpack_exports__","layout","seo","title","require","green","deepOrange","module","exports","lightSecondary","lightBackground","lightFont","darkPrimary","darkSecondary","darkBackground","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","components_Menu","_React$useState","anchorEl","setAnchorEl","Fragment","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","esm_Menu","Menu","keepMounted","open","Boolean","onClose","gatsby_browser_entry","to","Header","siteTitle","AppBar","position","marginLeft","Toolbar","minHeight","headerHeight","Layout","children","_856328897","header"],"mappings":"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","file":"component---src-pages-add-js-212dc22e38f45b7e0dfd.js","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { DataContext } from '../context/DataContext'\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core'\r\nimport {\r\n  Create as CreateIcon\r\n} from '@material-ui/icons'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  MuiPickersUtilsProvider\r\n} from '@material-ui/pickers'\r\nimport { getCombinedDatetime, timeFormats } from '../utils/time.utils'\r\n\r\nconst formatOptions = data => Object\r\n  .entries(data)\r\n  .map(([key, item], index) => <MenuItem key={index} value={item.tag}>{key}</MenuItem>)\r\n\r\nexport default (props) => {\r\n  const context = useContext(DataContext)\r\n  const { addItem } = context\r\n  const now = new Date()\r\n\r\n  const [text, setText] = useState('')\r\n  const [date, setDate] = useState(now)\r\n  const [time, setTime] = useState(now)\r\n  const [format, setFormat] = useState(timeFormats.days.tag)\r\n  const [goal, setGoal] = useState(null)\r\n\r\n  const updateText = e => setText(e.target.value)\r\n  const updateDate = date => setDate(date)\r\n  const updateTime = date => setTime(date)\r\n  const updateFormat = e => setFormat(e.target.value)\r\n  const updateGoal = e => setGoal(Number(e.target.value) >= 0 ? Number(e.target.value) : 0)\r\n  const add = e => {\r\n    e.preventDefault()\r\n    const combined = getCombinedDatetime(date, time).getTime()\r\n    addItem({\r\n      text,\r\n      time: combined,\r\n      format,\r\n      goal: goal > 0 ? goal : null,\r\n    })\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <form noValidate autoComplete=\"off\">\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Box className=\"main-content\">\r\n              <Typography variant=\"body1\" paragraph>\r\n                Introduce the text for describing your event. You can use the # symbol to mark the space where the time and format will be displayed.\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <em>Example: # from the last beer.</em>\r\n              </Typography>\r\n            </Box>\r\n            <TextField\r\n              required\r\n              id=\"text\"\r\n              name=\"text\"\r\n              label=\"Event\"\r\n              value={text}\r\n              onChange={updateText}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"date-helper\">Date</InputLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <DatePicker\r\n                value={date}\r\n                onChange={updateDate}\r\n                emptyLabel=\"date\"\r\n                id=\"date-helper\"\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"time-helper\">Time</InputLabel>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                value={time}\r\n                onChange={updateTime}\r\n                ampm={false}\r\n                id=\"time-helper\"\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"format-helper\">Format</InputLabel>\r\n            <Select\r\n              value={format}\r\n              onChange={updateFormat}\r\n              inputProps={{ name: 'format', id: 'format-helper' }}\r\n            >\r\n              {formatOptions(timeFormats)}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box style={{ marginTop: '3vh' }}>\r\n              <Typography variant=\"body1\" paragraph>\r\n                You can set a goal. The task will be marked as completed as soon as you reach the time goal.\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"goal\">Goal</InputLabel>\r\n            <TextField\r\n              type=\"number\"\r\n              id=\"goal\"\r\n              name=\"goal\"\r\n              value={goal || 0}\r\n              onChange={updateGoal}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              margin=\"normal\"\r\n              style={{ marginTop: 0 }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"goal-format-helper\">Format</InputLabel>\r\n            <Select\r\n              value={format}\r\n              onChange={updateFormat}\r\n              inputProps={{ name: 'goal-format', id: 'goal-format-helper' }}\r\n              disabled\r\n            >\r\n              {formatOptions(timeFormats)}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box className=\"buttons-container\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                onClick={add}\r\n                style={{\r\n                  backgroundColor: lightPrimary,\r\n                  color: darkFont,\r\n                }}\r\n              >\r\n                <CreateIcon className=\"icon\" />\r\n                Add\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </form>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport AddItemForm from '../components/AddItemForm'\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <SEO title=\"Add\" />\r\n    <AddItemForm />\r\n  </Layout>\r\n)\r\n","const { green, deepOrange } = require('@material-ui/core/colors')\n\nmodule.exports = {\n  lightPrimary: green[500],\n  lightSecondary: green[200],\n  lightBackground: green[50],\n  lightFont: '#222',\n  darkPrimary: deepOrange[900],\n  darkSecondary: deepOrange[600],\n  darkBackground: deepOrange[400], // might be 500\n  darkFont: '#fff', // might be #fff\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `viewport`,\r\n          content: `minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no`,\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport {\r\n  Menu as MenuIcon,\r\n} from '@material-ui/icons'\r\nimport {\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nexport default () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        edge=\"start\"\r\n        aria-label=\"home\"\r\n        aria-controls=\"menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MenuIcon style={{ color: darkFont }} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Link to=\"/\">\r\n          <MenuItem>Events</MenuItem>\r\n        </Link>\r\n        <Link to=\"/add\">\r\n          <MenuItem>Add</MenuItem>\r\n        </Link>\r\n      </Menu>\r\n    </>\r\n  )\r\n}","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport {\r\n  lightPrimary,\r\n  darkFont,\r\n} from '../styles/colors'\r\n\r\nimport Menu from './Menu'\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  const headerHeight = 70\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          position: 'fixed',\r\n          marginLeft: '-8px', // to remove margin 8px on body\r\n          marginTop: '-8px', // to remove margin 8px on body\r\n          backgroundColor: lightPrimary,\r\n          color: darkFont,\r\n        }}\r\n      >\r\n        <Toolbar style={{\r\n          minHeight: `${headerHeight}px`,\r\n        }}>\r\n          <Menu />\r\n          <Link to=\"/\" >\r\n            <Typography variant=\"h6\">{siteTitle}</Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div style={{\r\n          minHeight: `${headerHeight}px`,\r\n      }} />\r\n    </>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport Header from \"./header\"\r\nimport '../styles/index.scss'\r\nimport { lightBackground, lightFont } from '../styles/colors'\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        className=\"container\"\r\n        style={{\r\n          backgroundColor: lightBackground,\r\n          color: lightFont,\r\n        }}\r\n      >\r\n        {/* Main content section */}\r\n        <Grid item xs={12}>\r\n          {children}\r\n        </Grid>\r\n        {/* Footer section */}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}